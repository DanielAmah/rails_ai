name: Comprehensive Security Scan

on:
  schedule:
    # Run daily security scans
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'lib/**'
      - 'spec/**'
      - 'scripts/**'
      - '.github/workflows/comprehensive-security.yml'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        
    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
        
    - name: Run custom security scanner
      run: |
        echo "üîç Running custom security scanner..."
        if [ -f "scripts/security_scanner.rb" ]; then
          ruby scripts/security_scanner.rb
        else
          echo "No custom security scanner found, skipping..."
        fi
        
    - name: Run Brakeman security scan
      run: |
        echo "üîç Running Brakeman security scan..."
        gem install brakeman
        brakeman --no-pager --format json --output brakeman-report.json || true
        
    - name: Run Bundle Audit
      run: |
        echo "üîç Running bundle audit..."
        gem install bundle-audit
        bundle-audit check --update --output bundle-audit-report.json || true
        
    - name: Check for hardcoded secrets
      run: |
        echo "üîç Checking for hardcoded secrets..."
        # Use grep to check for common secret patterns
        if grep -r -i "api[_-]key\|secret\|password\|token" lib/ --exclude-dir=.git; then
          echo "‚ö†Ô∏è  Potential secrets found in code"
          exit 1
        else
          echo "‚úÖ No hardcoded secrets found"
        fi
        
    - name: Run RuboCop security checks
      run: |
        echo "üîç Running RuboCop security checks..."
        bundle exec rubocop --only Security --format json --out rubocop-security.json || true
        
    - name: Check for sensitive files
      run: |
        echo "üîç Checking for sensitive files..."
        # Check for common sensitive file patterns
        if find . -name "*.key" -o -name "*.pem" -o -name "*.p12" -o -name "*.pfx" | grep -v .git; then
          echo "‚ö†Ô∏è  Sensitive files found"
          exit 1
        else
          echo "‚úÖ No sensitive files found"
        fi
        
    - name: Run dependency vulnerability scan
      run: |
        echo "üîç Running dependency vulnerability scan..."
        gem install bundle-audit
        bundle-audit check --update || true
        
    - name: Run security tests
      run: |
        echo "üß™ Running security tests..."
        if [ -d "spec/security" ]; then
          bundle exec rspec spec/security/ --format documentation
        else
          echo "No security tests found, skipping..."
        fi
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-security-reports-${{ github.run_number }}
        path: |
          brakeman-report.json
          bundle-audit-report.json
          rubocop-security.json
          security-test-results.txt
        
    - name: Create comprehensive security summary
      run: |
        echo "# Comprehensive Security Scan Report - $(date)" > comprehensive-security-summary.md
        echo "" >> comprehensive-security-summary.md
        echo "## Scan Results" >> comprehensive-security-summary.md
        echo "- **Date**: $(date)" >> comprehensive-security-summary.md
        echo "- **Commit**: ${{ github.sha }}" >> comprehensive-security-summary.md
        echo "- **Branch**: ${{ github.ref_name }}" >> comprehensive-security-summary.md
        echo "" >> comprehensive-security-summary.md
        
        if [ -f brakeman-report.json ]; then
          echo "## Brakeman Security Scan" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          cat brakeman-report.json >> comprehensive-security-summary.md
        fi
        
        if [ -f bundle-audit-report.json ]; then
          echo "## Bundle Audit Report" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          cat bundle-audit-report.json >> comprehensive-security-summary.md
        fi
        
        if [ -f rubocop-security.json ]; then
          echo "## RuboCop Security Checks" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          cat rubocop-security.json >> comprehensive-security-summary.md
        fi
        
    - name: Upload comprehensive security summary
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-security-summary-${{ github.run_number }}
        path: comprehensive-security-summary.md
        
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('comprehensive-security-summary.md')) {
            const summary = fs.readFileSync('comprehensive-security-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîí Comprehensive Security Scan Report\n\n${summary}`
            });
          }
        
    - name: Fail on critical vulnerabilities
      if: failure()
      run: |
        echo "‚ùå Security scan failed due to critical vulnerabilities"
        exit 1
