name: Comprehensive Security Scan

on:
  schedule:
    # Run daily security scans
    - cron: '0 2 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'lib/**'
      - 'spec/**'
      - 'scripts/**'
      - '.github/workflows/comprehensive-security.yml'

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.0'
        
    - name: Install dependencies
      run: |
        gem install bundler
        bundle install
        
    - name: Run custom security scanner
      run: |
        echo "üîç Running custom security scanner..."
        ruby scripts/security_scanner.rb
        
    - name: Run Brakeman security scan
      run: |
        echo "üîç Running Brakeman security scan..."
        gem install brakeman
        brakeman --no-pager --format json --output brakeman-report.json || true
        
    - name: Run Bundle Audit
      run: |
        echo "üîç Running bundle audit..."
        gem install bundle-audit
        bundle-audit check --update --output bundle-audit-report.json || true
        
    - name: Run RuboCop security checks
      run: |
        echo "üîç Running RuboCop security checks..."
        bundle exec rubocop --only Security --format json --out rubocop-security.json || true
        
    - name: Run Semgrep security scan
      run: |
        echo "üîç Running Semgrep security scan..."
        docker run --rm -v "$(pwd):/src" returntocorp/semgrep --config=auto --json --output=semgrep-report.json /src || true
        
    - name: Run CodeQL security scan
      run: |
        echo "üîç Running CodeQL security scan..."
        # This would require CodeQL setup in the repository
        echo "CodeQL scan would go here" > codeql-report.json
        
    - name: Check for hardcoded secrets
      run: |
        echo "üîç Checking for hardcoded secrets..."
        gem install detect-secrets
        detect-secrets scan --all-files --baseline .secrets.baseline --json --output secrets-report.json || true
        
    - name: Run dependency vulnerability scan
      run: |
        echo "üîç Running dependency vulnerability scan..."
        gem install bundler-audit
        bundle-audit check --update --output dependency-audit-report.json || true
        
    - name: Run security tests
      run: |
        echo "üîç Running security tests..."
        bundle exec rspec spec/security/ --format documentation --out security-test-results.txt || true
        
    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: comprehensive-security-reports-${{ github.run_number }}
        path: |
          security_scan_report.json
          security_scan_report.md
          brakeman-report.json
          bundle-audit-report.json
          rubocop-security.json
          semgrep-report.json
          codeql-report.json
          secrets-report.json
          dependency-audit-report.json
          security-test-results.txt
        
    - name: Create comprehensive security summary
      run: |
        echo "# Comprehensive Security Scan Report - $(date)" > comprehensive-security-summary.md
        echo "" >> comprehensive-security-summary.md
        echo "## Scan Information" >> comprehensive-security-summary.md
        echo "- **Date**: $(date)" >> comprehensive-security-summary.md
        echo "- **Commit**: ${{ github.sha }}" >> comprehensive-security-summary.md
        echo "- **Branch**: ${{ github.ref_name }}" >> comprehensive-security-summary.md
        echo "- **Runner**: ${{ runner.os }}" >> comprehensive-security-summary.md
        echo "" >> comprehensive-security-summary.md
        
        echo "## Security Tools Used" >> comprehensive-security-summary.md
        echo "- Custom Security Scanner" >> comprehensive-security-summary.md
        echo "- Brakeman (Static Analysis)" >> comprehensive-security-summary.md
        echo "- Bundle Audit (Dependency Scan)" >> comprehensive-security-summary.md
        echo "- RuboCop Security" >> comprehensive-security-summary.md
        echo "- Semgrep (SAST)" >> comprehensive-security-summary.md
        echo "- CodeQL (Code Analysis)" >> comprehensive-security-summary.md
        echo "- Detect Secrets" >> comprehensive-security-summary.md
        echo "- Dependency Vulnerability Scan" >> comprehensive-security-summary.md
        echo "- Security Test Suite" >> comprehensive-security-summary.md
        echo "" >> comprehensive-security-summary.md
        
        if [ -f security_scan_report.md ]; then
          echo "## Custom Security Scanner Results" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          cat security_scan_report.md >> comprehensive-security-summary.md
        fi
        
        if [ -f brakeman-report.json ]; then
          echo "## Brakeman Security Scan" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          echo "\`\`\`json" >> comprehensive-security-summary.md
          cat brakeman-report.json >> comprehensive-security-summary.md
          echo "\`\`\`" >> comprehensive-security-summary.md
        fi
        
        if [ -f bundle-audit-report.json ]; then
          echo "## Bundle Audit Results" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          echo "\`\`\`json" >> comprehensive-security-summary.md
          cat bundle-audit-report.json >> comprehensive-security-summary.md
          echo "\`\`\`" >> comprehensive-security-summary.md
        fi
        
        if [ -f security-test-results.txt ]; then
          echo "## Security Test Results" >> comprehensive-security-summary.md
          echo "" >> comprehensive-security-summary.md
          cat security-test-results.txt >> comprehensive-security-summary.md
        fi
        
    - name: Upload comprehensive security summary
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-security-summary-${{ github.run_number }}
        path: comprehensive-security-summary.md
        
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('comprehensive-security-summary.md')) {
            const summary = fs.readFileSync('comprehensive-security-summary.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## üîí Comprehensive Security Scan Report\n\n${summary}`
            });
          }
          
    - name: Fail on critical vulnerabilities
      run: |
        echo "üîç Checking for critical vulnerabilities..."
        
        # Check custom scanner results
        if [ -f security_scan_report.json ]; then
          critical_count=$(jq '.summary.critical // 0' security_scan_report.json)
          if [ "$critical_count" -gt 0 ]; then
            echo "‚ùå Found $critical_count critical vulnerabilities!"
            exit 1
          fi
        fi
        
        # Check Brakeman results
        if [ -f brakeman-report.json ]; then
          high_count=$(jq '.warnings | map(select(.confidence == "High")) | length' brakeman-report.json)
          if [ "$high_count" -gt 0 ]; then
            echo "‚ùå Found $high_count high-confidence security warnings!"
            exit 1
          fi
        fi
        
        echo "‚úÖ No critical vulnerabilities found!"
